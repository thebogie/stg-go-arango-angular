version: '3.8'
services:
  ### ===================
  ### APP SERVICE
  ### ===================
  app:
    container_name: app
    restart: always
    build: .
    healthcheck:
      interval: 120ms
      retries: 5
      start_period: 60ms
      test: |
        touch /tmp/healthcheck.txt &&
        mkdir /tmp/healthcheck &&
        mv /tmp/healthcheck.txt /tmp/healthcheck &&
        cd /tmp/healthcheck &&
        echo "hello my docker container is working fine" >> healthcheck.txt &&
        cat healthcheck.txt &&
        rm healthcheck.txt &&
        cd .. &&
        rmdir /tmp/healthcheck
        cls
      timeout: 60ms
    env_file:
      - .env
    ports:
      - 4000:4000
    networks:
      - restapi_network
    depends_on:
      - db
  ### ===================
  ### DB SERVICE
  ### ===================
  db:
    image: postgres:12-alpine
    restart: always
    healthcheck:
      interval: 120ms
      retries: 5
      start_period: 60ms
      test: |
        touch /tmp/healthcheck.txt &&
        mkdir /tmp/healthcheck &&
        mv /tmp/healthcheck.txt /tmp/healthcheck &&
        cd /tmp/healthcheck &&
        echo "hello my docker container is working fine" >> healthcheck.txt &&
        cat healthcheck.txt &&
        rm healthcheck.txt &&
        cd .. &&
        rmdir /tmp/healthcheck
        cls
      timeout: 60ms
    environment:
      POSTGRES_DB: campus
      POSTGRES_USER: restuwahyu13
      POSTGRES_PASSWORD: restuwahyu13
    ports:
      - 5430:5432
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - restapi_network
  ### ===================
  ### ADMINER SERVICE
  ### ===================
  panel:
    image: adminer:latest
    restart: always
    healthcheck:
      interval: 120ms
      retries: 5
      start_period: 60ms
      test: |
        touch /tmp/healthcheck.txt &&
        mkdir /tmp/healthcheck &&
        mv /tmp/healthcheck.txt /tmp/healthcheck &&
        cd /tmp/healthcheck &&
        echo "hello my docker container is working fine" >> healthcheck.txt &&
        cat healthcheck.txt &&
        rm healthcheck.txt &&
        cd .. &&
        rmdir /tmp/healthcheck
        cls
      timeout: 60ms
    ports:
      - 8080:8080
    networks:
      - restapi_network
  ### ===================
  ### SWAGGER SERVICE
  ### ===================
  doc:
    build:
      context: .
      dockerfile: swagger/Dockerfile
    restart: always
    healthcheck:
      interval: 120ms
      retries: 5
      start_period: 60ms
      test: |
        touch /tmp/healthcheck.txt &&
        mkdir /tmp/healthcheck &&
        mv /tmp/healthcheck.txt /tmp/healthcheck &&
        cd /tmp/healthcheck &&
        echo "hello my docker container is working fine" >> healthcheck.txt &&
        cat healthcheck.txt &&
        rm healthcheck.txt &&
        cd .. &&
        rmdir /tmp/healthcheck
        cls
      timeout: 60ms
    environment:
      - URL=http://localhost/openapi.yml
      - SWAGGER_JSON=swagger/openapi.yml
    ports:
      - 80:8080
    networks:
      - restapi_network
  ### ========================
  ### VOLUMES PERSISTENT DATA
  ### ========================
volumes:
  pg-data:
  ### ===================================
  ### NETWORKS GROUP FOR ONE SAME SERVICE
  ### ===================================
networks:
  restapi_network:
